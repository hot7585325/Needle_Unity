import{a2 as w,d as p}from"./three@0.169.5.js";import{M as b}from"./MeshBVH.57797ef8.js";class k{constructor(r){this.name="WorkerBase",this.running=!1,this.worker=r,this.worker.onerror=e=>{throw e.message?new Error(`${this.name}: Could not create Web Worker with error "${e.message}"`):new Error(`${this.name}: Could not create Web Worker.`)}}runTask(){}generate(...r){if(this.running)throw new Error("GenerateMeshBVHWorker: Already running job.");if(this.worker===null)throw new Error("GenerateMeshBVHWorker: Worker has been disposed.");this.running=!0;const e=this.runTask(this.worker,...r);return e.finally(()=>{this.running=!1}),e}dispose(){this.worker.terminate(),this.worker=null}}class m extends k{constructor(){super(new Worker(new URL(""+new URL("generateMeshBVH.worker-b7788939.js",import.meta.url).href,self.location),{type:"module"})),this.name="GenerateMeshBVHWorker"}runTask(r,e,s={}){return new Promise((h,a)=>{if(e.getAttribute("position").isInterleavedBufferAttribute||e.index&&e.index.isInterleavedBufferAttribute)throw new Error("GenerateMeshBVHWorker: InterleavedBufferAttribute are not supported for the geometry attributes.");r.onerror=n=>{a(new Error(`[GenerateMeshBVHWorker] ${n.message||"Unknown error. Please check the server console. If you're using vite try adding 'three-mesh-bvh' to 'optimizeDeps.exclude' in your vite.config.js"}`))},r.onmessage=n=>{const{data:o}=n;if(o.error)a(new Error(o.error)),r.onmessage=null;else if(o.serialized){const{serialized:t,position:c}=o,d=b.deserialize(t,e,{setIndex:!1}),B=Object.assign({setBoundingBox:!0},s);if(e.attributes.position.array=c,t.index)if(e.index)e.index.array=t.index;else{const g=new w(t.index,1,!1);e.setIndex(g)}B.setBoundingBox&&(e.boundingBox=d.getBoundingBox(new p)),s.onProgress&&s.onProgress(o.progress),h(d),r.onmessage=null}else s.onProgress&&s.onProgress(o.progress)};const i=e.index?e.index.array:null,u=e.attributes.position.array,l=[u];i&&l.push(i),r.postMessage({index:i,position:u,options:{...s,onProgress:null,includedProgressCallback:!!s.onProgress,groups:[...e.groups]}},l.map(n=>n.buffer).filter(n=>typeof SharedArrayBuffer>"u"||!(n instanceof SharedArrayBuffer)))})}}export{m as GenerateMeshBVHWorker};
